@model FilmsC.Models.Film

@{
    ViewBag.Title = "Редактировать";
}

<h2>Редактировать</h2>


@using (Html.BeginForm("AddPoster", "Film", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.HiddenFor(model => model.PosterName)
    @Html.HiddenFor(model => model.ContentType)
    if (Model.Poster == null || Model.Poster.Length <= 1)
    {
        <!-- Выводим кнопку загрузки файла постера -->
        <div class="form-group">
            @Html.LabelFor(model => model.Poster, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                <input type="file" name="uploadImage" />
            </div>
            <div class="col-md-2">
                <input type="submit" value="Сохранить постер" class="btn btn-default" />
            </div>
        </div>
    }
    else
    {
        string imreBase64Data = Convert.ToBase64String(Model.Poster);
        string imgDataURL = string.Format("data:" + Model.ContentType + ";base64," + imreBase64Data);
        //Отобразить картинку постера
        <div>
            <img src="@imgDataURL" width="80" alt="Постер" />
        </div>
    }
}

@using (Html.BeginForm("Edit", "Film", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Фильм</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)

        @*<div class="form-group">
                @Html.LabelFor(model => model.Poster, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-2">
                    <input type="file" name="uploadImage" />
                    @Html.EditorFor(model => model.Poster, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Poster, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-2">
                    <input type="button" formmethod="post" onclick="@Url.Action("AddPoster", "Film", new {uploadImage = uploadImage})" value="Сохранить постер" class="btn btn-default" />
                </div>
            </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Year, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Year, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Year, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Producer, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Producer, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Producer, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Genre, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Genre, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Genre, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Owner, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Owner, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Owner, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Сохранить" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Вернуться в Каталог", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
